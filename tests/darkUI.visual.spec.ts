import { test, expect } from '@playwright/test'; test.describe('Dark UI Pages', () => { test('MyListings page renders with dark theme', async ({ page }) => { await page.setViewportSize({ width: 390, height: 844 }); await page.goto('http://localhost:8087/login'); await page.fill('input[name="username"]', 'troyaxjl@gmail.com'); await page.fill('input[name="password"]', 'Zhehkd.12351'); await page.click('button[type="submit"]'); await page.waitForLoadState('networkidle'); await page.goto('http://localhost:8087/my-listings'); await page.waitForLoadState('networkidle'); expect(await page.screenshot({ fullPage: true })).toMatchSnapshot('my-listings-dark.png'); }); test('MyApplications page renders with dark theme', async ({ page }) => { await page.setViewportSize({ width: 390, height: 844 }); await page.goto('http://localhost:8087/login'); await page.fill('input[name="username"]', 'troyaxjl@gmail.com'); await page.fill('input[name="password"]', 'Zhehkd.12351'); await page.click('button[type="submit"]'); await page.waitForLoadState('networkidle'); await page.goto('http://localhost:8087/my-applications'); await page.waitForLoadState('networkidle'); expect(await page.screenshot({ fullPage: true })).toMatchSnapshot('my-applications-dark.png'); }); test('Profile page renders with dark theme', async ({ page }) => { await page.setViewportSize({ width: 390, height: 844 }); await page.goto('http://localhost:8087/login'); await page.fill('input[name="username"]', 'troyaxjl@gmail.com'); await page.fill('input[name="password"]', 'Zhehkd.12351'); await page.click('button[type="submit"]'); await page.waitForLoadState('networkidle'); await page.goto('http://localhost:8087/profile'); await page.waitForLoadState('networkidle'); expect(await page.screenshot({ fullPage: true })).toMatchSnapshot('profile-dark.png'); }); });
